/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sudoku;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import java.util.Scanner;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author dajig
 */
public class SudokuGUI extends javax.swing.JFrame {

    /**
     * Creates new form SudokuGUI
     */
    public SudokuGUI() {
        initComponents();
        startMyBanner();
    }
    private void  startMyBanner(){
      
       String bannerText=jLabel4.getText();
       int bannerTextLength=bannerText.length();
      Timer timer=new Timer(1000, new ActionListener () {
         int pos=0;
           public void actionPerformed(ActionEvent e) {
               pos=pos+1;
               pos%= bannerTextLength;
               jLabel4.setText(bannerText.substring(pos)+" "+bannerText.substring(0,pos));
           }
       
              }
              );
      timer.start();
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GAME\n");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 245, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setText("THIS SUDOKU GAME IS DESIGN BY GURU LUTE  UNDER THE GUIDENCE OF A M FAJGE SIR");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("SIZE");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("LEVEL\n");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        jButton1.setBackground(new java.awt.Color(255, 204, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton2.setText("SUBMIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))
                                .addGap(0, 45, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                        .addGap(31, 31, 31)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(199, 199, 199)
                        .addComponent(jButton2))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String inputtedGridSize = jTextField1.getText();
    int gridSize = Integer.parseInt(inputtedGridSize);
    
    String difficulty = ((String) jComboBox1.getSelectedItem()).toLowerCase();

    int[][] board = new int[gridSize][gridSize];
    
    generateBoard(board, gridSize);
    System.out.println("Generated full board:");
    printBoard(board, gridSize);
    
    int[][] solution = copyBoard(board, gridSize);
    
    removeNumbers(board, gridSize, difficulty);
    System.out.println("Puzzle after removing numbers (" + difficulty + "):");
    printBoard(board, gridSize);

    jPanel2.removeAll();
    jPanel2.setLayout(new GridLayout(gridSize, gridSize));

    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < gridSize; j++) {
            JTextField textField = new JTextField(2);
            textField.setHorizontalAlignment(JTextField.CENTER);
    if (board[i][j] == 0) {
    textField.setText("");
    textField.setEditable(true);
    textField.setForeground(new java.awt.Color(0, 0, 128));
    } else {
    textField.setText(String.valueOf(board[i][j]));
    textField.setEditable(false);
    textField.setBackground(new java.awt.Color(220, 220, 220));
    textField.setForeground(new java.awt.Color(0, 0, 0));
    textField.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.GRAY));
    }
            jPanel2.add(textField);
        }
    }
    jPanel2.validate();
    jPanel2.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
int gridSize = Integer.parseInt(jTextField1.getText());
    int[][] userBoard = new int[gridSize][gridSize];

    int index = 0;
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < gridSize; j++) {
            JTextField textField = (JTextField) jPanel3.getComponent(index++);
            String text = textField.getText().trim();

            if (text.matches("\\d+")) {
                int value = Integer.parseInt(text);
                if (value >= 1 && value <= gridSize) {
                    userBoard[i][j] = value;
                } else {
                    userBoard[i][j] = 0;
                }
            } else {
                userBoard[i][j] = 0;
            }
        }
    }

    if (isCorrect(userBoard, gridSize)) {
        javax.swing.JOptionPane.showMessageDialog(this, "✅ Congratulations! You solved the puzzle.");
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "❌ Incorrect solution. Please try again.");
    }
    }                                        

    public static int[][] copyBoard(int[][] original, int gridSize) {
    int[][] copy = new int[gridSize][gridSize];
    for (int i = 0; i < gridSize; i++) {
        System.arraycopy(original[i], 0, copy[i], 0, gridSize);
    }
    return copy;
}

    public static void printBoard(int[][] board, int size) {
    int maxDigits = String.valueOf(size).length();
    int cellWidth = maxDigits + 2;

    StringBuilder line = new StringBuilder(".");
    for (int i = 0; i < size; i++) {
        line.append("-".repeat(cellWidth)).append(".");
    }
    String border = line.toString();
    System.out.println(border);

    for (int i = 0; i < size; i++) {
        System.out.print("|");
        for (int j = 0; j < size; j++) {
            String str = (board[i][j] == 0 ? " ".repeat(maxDigits) : String.format("%" + maxDigits + "d", board[i][j]));
            System.out.print(" " + str + " |");
        }
        System.out.println();
        System.out.println(border);
    }
}

    public static void generateBoard(int[][] board, int size) {
    Random rand = new Random();
    int[] numbers = new int[size];

    for (int i = 0; i < size; i++) {
        numbers[i] = i + 1;
    }
    shuffle(numbers, rand);
    System.arraycopy(numbers, 0, board[0], 0, size);

    fillBoard(board, 0, 0, size);
}

private static boolean fillBoard(int[][] board, int row, int col, int size) {
    if (row == size) return true;
    if (col == size) return fillBoard(board, row + 1, 0, size);
    if (board[row][col] != 0) return fillBoard(board, row, col + 1, size);

    Random rand = new Random();
    int[] numbers = new int[size];
    for (int i = 0; i < size; i++) numbers[i] = i + 1;
    shuffle(numbers, rand);

    for (int num : numbers) {
        if (isSafe(board, row, col, num, size)) {
            board[row][col] = num;
            if (fillBoard(board, row, col + 1, size)) return true;
            board[row][col] = 0;
        }
    }
    return false;
}

private static boolean isSafe(int[][] board, int row, int col, int num, int size) {
    for (int x = 0; x < size; x++) {
        if (board[row][x] == num || board[x][col] == num) {
            return false;
        }
    }

    return true;
}


private static void shuffle(int[] array, Random rand) {
    for (int i = array.length - 1; i > 0; i--) {
        int j = rand.nextInt(i + 1);
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
}

public static void removeNumbers(int[][] board, int size, String level) {
    Random rand = new Random();
    int totalCells = size * size;
    int blanks;

    blanks = switch (level.toLowerCase()) {
            case "low" -> (totalCells * 3) / 10;
            case "medium" -> (totalCells *5) / 10;
            case "high" -> (totalCells * 8) / 10;
            default -> (totalCells *5) / 10;
        };

    while (blanks > 0) {
        int r = rand.nextInt(size);
        int c = rand.nextInt(size);
        if (board[r][c] != 0) {
            board[r][c] = 0;
            blanks--;
        }
    }
}


 
    public static void getUserInput(int[][] board, int size) {
        Scanner sc = new Scanner(System.in);
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                if (board[i][j] == 0) {
                    System.out.print("Enter number for row " + (i + 1) + ", column " + (j + 1) + ": ");
                    board[i][j] = sc.nextInt();
                    printBoard(board, size);
                }
            }
        }
        sc.close();
    }

    public static void checkBoard(int[][] board, int size) {
        if (isCorrect(board, size)) {
            System.out.println("Congrats! You completed the Sudoku.");
        } else {
            System.out.println("Incorrect solution. Try again!");
        }
    }

    public static boolean isCorrect(int[][] board, int size) {
        for (int i = 0; i < size; i++) {
            boolean[] rowCheck = new boolean[size + 1];
            boolean[] colCheck = new boolean[size + 1];

            for (int j = 0; j < size; j++) {
                int rowNum = board[i][j];
                int colNum = board[j][i];

                if (rowNum < 1 || rowNum > size || rowCheck[rowNum]) {
                    return false;
                }
                if (colNum < 1 || colNum > size || colCheck[colNum]) {
                    return false;
                }
                rowCheck[rowNum] = true;
                colCheck[colNum] = true;
            }
        }
        return true;       
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SudokuGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudokuGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
